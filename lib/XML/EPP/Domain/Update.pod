=head1 NAME

? - implement ?

=head1 SYNOPSIS

TODO

=head1 DESCRIPTION

...

=head2 XML Schema Definition

 <!--
 Child elements of the <update> command.
 -->
 <complexType name="updateType">
  <sequence>
    <element name="name" type="eppcom:labelType"/>
    <element name="add" type="domain:addRemType"
     minOccurs="0"/>
    <element name="rem" type="domain:addRemType"
     minOccurs="0"/>
    <element name="chg" type="domain:chgType"
     minOccurs="0"/>
  </sequence>
 </complexType>

=head2 Attributes

There are no xml attributes on this element.

=head2 Elements

=over

=item B<remove>

This element is of type 'XML::EPP::Domain::AddRem' and is not required.  It corresponds to the XML element of name 'rem'.

=item B<change>

This element is of type 'XML::EPP::Domain::Change' and is not required.  It corresponds to the XML element of name 'chg'.

=item B<name>

This element is of type 'XML::EPP::Common::labelType' and is not required.

=item B<add>

This element is of type 'XML::EPP::Domain::AddRem' and is not required.

=back

=head1 SEE ALSO

ToMake

=head1 AUTHOR AND LICENSE

Development commissioned by NZ Registry Services, and carried out by
Catalyst IT - L<http://www.catalyst.net.nz/>

Copyright 2009, 2010, NZ Registry Services.  This module is licensed
under the Artistic License v2.0, which permits relicensing under other
Free Software licenses.

=cut

